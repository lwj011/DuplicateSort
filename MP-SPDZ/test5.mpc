program.use_edabit(True)
from Compiler import types,library, instructions
from Compiler.types import Array, sint, cint
from Compiler.basic_radix_sort5 import radix_sort_both, multi_sort, normal_sort, sort_belong
from Compiler.circuit import sha3_256
from Compiler.GC.types import sbitvec
from Compiler.instructions import time, crash

from  Compiler.sorting import radix_sort

#this is test to compare with elgamal,test data number



a = sint.Array(10)
a.assign([257, 162, 33, 170, 162, 438, 162, 263, 389, 162])
a.print_reveal_nested(end='\n')
#b, b_order = radix_sort_both(a, a)


start_timer(11)
b, b_order = radix_sort_both(a, a)
stop_timer(11)
b.print_reveal_nested(end='\n')
b_order.print_reveal_nested(end='\n')


start_timer(12)
b, b_order = multi_sort(a, a)
stop_timer(12)
b.print_reveal_nested(end='\n')
b_order.print_reveal_nested(end='\n')

start_timer(13)
b, b_order = normal_sort(a, a)
stop_timer(13)
b.print_reveal_nested(end='\n')
b_order.print_reveal_nested(end='\n')

start_timer(14)
sort_belong(a, a)
stop_timer(14)

#print_ln('-------------------------------------------------------------------')



#a = sint.Array(25)
#a.assign([148, 146, 499, 262, 475, 200, 447, 202, 390, 178, 276, 361, 411, 135, 220, 388, 286, 421, 307, 313, 402, 448, 2, 170, 174])
#a.print_reveal_nested(end='\n')

#start_timer(21)
#b, b_order = radix_sort_both(a, a)
#stop_timer(21)
#b.print_reveal_nested(end='\n')
#b_order.print_reveal_nested(end='\n')

#start_timer(22)
#b, b_order = multi_sort(a, a)
#stop_timer(22)
#b.print_reveal_nested(end='\n')
#b_order.print_reveal_nested(end='\n')

#start_timer(23)
#b, b_order = normal_sort(a, a)
#stop_timer(23)
#b.print_reveal_nested(end='\n')
#b_order.print_reveal_nested(end='\n')

#start_timer(24)
#sort_belong(a, a)
#stop_timer(24)

#print_ln('-------------------------------------------------------------------')





#a = sint.Array(50)
#a.assign([301, 28, 21, 276, 371, 454, 183, 209, 161, 326, 345, 114, 399, 496, 173, 193, 301, 442, 495, 413, 196, 400, 341, 108, 489, 273, 75, 374, 40, 421, 82, 378, 229, 411, 383, 15, 397, 288, 460, 79, 207, 340, 327, 239, 218, 301, 315, 457, 93, 388])
#a.print_reveal_nested(end='\n')

#start_timer(31)
#b, b_order = radix_sort_both(a, a)
#stop_timer(31)
#b.print_reveal_nested(end='\n')
#b_order.print_reveal_nested(end='\n')

#start_timer(32)
#b, b_order = multi_sort(a, a)
#stop_timer(32)
#b.print_reveal_nested(end='\n')
#b_order.print_reveal_nested(end='\n')

#start_timer(33)
#b, b_order = normal_sort(a, a)
#stop_timer(33)
#b.print_reveal_nested(end='\n')
#b_order.print_reveal_nested(end='\n')

#start_timer(34)
#sort_belong(a, a)
#stop_timer(34)

#print_ln('-------------------------------------------------------------------')



#a = sint.Array(75)
#a.assign([406, 354, 485, 463, 391, 240, 354, 278, 108, 235, 218, 437, 291, 303, 443, 378, 481, 115, 397, 204, 153, 407, 154, 498, 218, 407, 427, 169, 345, 405, 156, 22, 320, 258, 455, 270, 135, 273, 127, 222, 320, 123, 273, 211, 57, 304, 400, 313, 170, 426, 459, 413, 394, 343, 497, 182, 435, 32, 354, 463, 116, 239, 351, 412, 446, 325, 0, 212, 291, 307, 61, 137, 4, 317, 402])
#a.print_reveal_nested(end='\n')

#start_timer(41)
#b, b_order = radix_sort_both(a, a)
#stop_timer(41)
#b.print_reveal_nested(end='\n')
#b_order.print_reveal_nested(end='\n')

#start_timer(42)
#b, b_order = multi_sort(a, a)
#stop_timer(42)
#b.print_reveal_nested(end='\n')
#b_order.print_reveal_nested(end='\n')

#start_timer(43)
#b, b_order = normal_sort(a, a)
#stop_timer(43)
#b.print_reveal_nested(end='\n')
#b_order.print_reveal_nested(end='\n')

#start_timer(44)
#sort_belong(a, a)
#stop_timer(44)

#print_ln('-------------------------------------------------------------------')







#a = sint.Array(100)
#a.assign([24, 186, 491, 107, 388, 1, 129, 260, 44, 324, 266, 325, 278, 269, 382, 228, 436, 199, 348, 330, 459, 268, 471, 291, 422, 205, 5, 52, 448, 432, 386, 159, 277, 343, 432, 154, 329, 244, 300, 490, 387, 463, 64, 288, 230, 231, 239, 152, 230, 213, 252, 53, 306, 89, 226, 53, 434, 105, 114, 129, 207, 139, 426, 422, 416, 473, 5, 472, 206, 351, 190, 281, 272, 382, 137, 473, 289, 220, 11, 235, 470, 234, 86, 243, 316, 94, 151, 239, 253, 135, 182, 141, 64, 34, 304, 182, 329, 213, 115, 194])
#a.print_reveal_nested(end='\n')

#start_timer(51)
#b, b_order = radix_sort_both(a, a)
#stop_timer(51)
#b.print_reveal_nested(end='\n')
#b_order.print_reveal_nested(end='\n')

#start_timer(52)
#b, b_order = multi_sort(a, a)
#stop_timer(52)
#b.print_reveal_nested(end='\n')
#b_order.print_reveal_nested(end='\n')

start_timer(53)
b, b_order = normal_sort(a, a)
stop_timer(53)
#b.print_reveal_nested(end='\n')
#b_order.print_reveal_nested(end='\n')

#start_timer(54)
#sort_belong(a, a)
#stop_timer(54)

#print_ln('-------------------------------------------------------------------')



#a = sint.Array(500)
#a.assign([71, 248, 452, 36, 356, 433, 29, 293, 93, 382, 275, 348, 469, 70, 341, 182, 188, 47, 443, 467, 364, 223, 124, 409, 246, 384, 274, 18, 157, 468, 436, 185, 232, 319, 220, 479, 277, 407, 443, 297, 363, 272, 236, 394, 56, 225, 50, 57, 318, 107, 227, 153, 428, 138, 140, 308, 298, 336, 32, 368, 73, 67, 94, 148, 173, 482, 107, 457, 249, 316, 125, 208, 301, 28, 422, 173, 8, 336, 322, 107, 378, 274, 174, 168, 468, 401, 228, 412, 250, 389, 117, 275, 492, 88, 2, 370, 133, 360, 134, 181, 462, 244, 299, 126, 419, 67, 350, 328, 144, 340, 280, 461, 45, 387, 158, 403, 439, 162, 294, 9, 485, 475, 164, 421, 478, 132, 421, 436, 234, 126, 332, 241, 130, 459, 430, 480, 307, 441, 1, 412, 9, 137, 333, 2, 350, 82, 474, 8, 13, 409, 439, 341, 87, 269, 446, 44, 216, 0, 138, 34, 19, 437, 424, 357, 142, 468, 448, 184, 280, 133, 154, 314, 156, 49, 261, 61, 192, 349, 326, 444, 118, 15, 356, 58, 320, 40, 48, 62, 390, 403, 419, 2, 308, 165, 177, 112, 185, 7, 222, 444, 82, 156, 369, 44, 41, 205, 411, 408, 241, 424, 414, 449, 129, 76, 61, 282, 331, 254, 497, 151, 489, 188, 481, 404, 19, 75, 436, 226, 189, 163, 53, 45, 228, 272, 499, 106, 342, 152, 307, 422, 431, 170, 76, 346, 258, 13, 59, 441, 439, 492, 14, 116, 414, 369, 231, 411, 206, 158, 5, 287, 353, 89, 143, 433, 60, 321, 259, 15, 71, 63, 33, 235, 87, 220, 63, 51, 401, 307, 309, 126, 207, 309, 12, 131, 210, 46, 302, 56, 172, 269, 244, 369, 470, 170, 353, 54, 224, 168, 268, 173, 254, 15, 398, 18, 97, 479, 355, 7, 180, 297, 406, 433, 343, 294, 163, 87, 341, 468, 219, 128, 33, 480, 376, 339, 135, 159, 9, 289, 56, 464, 273, 407, 447, 81, 33, 3, 3, 6, 395, 214, 281, 18, 282, 262, 424, 93, 316, 413, 390, 288, 257, 273, 81, 354, 52, 1, 63, 289, 100, 327, 492, 249, 317, 468, 78, 426, 378, 304, 35, 178, 466, 492, 237, 243, 421, 219, 411, 262, 499, 489, 389, 10, 439, 125, 241, 271, 84, 138, 300, 181, 220, 403, 55, 376, 396, 241, 1, 300, 264, 10, 496, 458, 116, 468, 198, 168, 429, 261, 51, 147, 268, 341, 315, 227, 184, 44, 204, 478, 286, 314, 193, 464, 206, 179, 171, 281, 21, 216, 491, 274, 115, 144, 76, 212, 71, 263, 297, 355, 44, 200, 331, 221, 28, 343, 158, 335, 441, 23, 472, 399, 260, 240, 448, 204, 412, 216, 230, 437, 148, 374, 495, 72, 477, 417, 391, 327, 257, 385, 456, 191, 164, 465, 232, 191, 184, 149, 318, 400, 38, 52, 398, 413, 317, 428, 188, 429, 395, 441, 307, 78, 211, 50, 18, 247, 348, 179, 70, 73, 90, 375])
#a.print_reveal_nested(end='\n')

#start_timer(61)
#b, b_order = radix_sort_both(a, a)
#stop_timer(61)
#b.print_reveal_nested(end='\n')
#b_order.print_reveal_nested(end='\n')

#start_timer(62)
#b, b_order = multi_sort(a, a)
#stop_timer(62)
#b.print_reveal_nested(end='\n')
#b_order.print_reveal_nested(end='\n')

#start_timer(63)
#b, b_order = normal_sort(a, a)
#stop_timer(63)
#b.print_reveal_nested(end='\n')
#b_order.print_reveal_nested(end='\n')

#start_timer(64)
#sort_belong(a, a)
#stop_timer(64)

#print_ln('-------------------------------------------------------------------')



#a = sint.Array(1000)
#a.assign([426, 63, 249, 6, 460, 484, 473, 321, 57, 437, 32, 205, 450, 47, 299, 42, 263, 293, 398, 165, 373, 62, 480, 213, 306, 332, 89, 356, 171, 128, 36, 480, 283, 196, 445, 356, 65, 218, 29, 352, 422, 132, 480, 135, 249, 438, 231, 444, 434, 84, 39, 54, 488, 5, 327, 6, 436, 145, 446, 355, 229, 353, 276, 440, 451, 149, 313, 495, 139, 476, 99, 43, 219, 134, 319, 447, 488, 118, 242, 74, 29, 67, 445, 362, 81, 213, 51, 32, 45, 180, 3, 43, 19, 49, 46, 61, 129, 131, 123, 380, 242, 189, 5, 335, 469, 500, 392, 343, 362, 406, 324, 244, 459, 430, 229, 304, 463, 277, 446, 52, 385, 464, 186, 137, 429, 253, 93, 420, 117, 304, 214, 372, 34, 467, 418, 300, 478, 4, 127, 378, 253, 62, 498, 197, 147, 138, 267, 218, 158, 463, 224, 413, 79, 462, 98, 27, 55, 457, 422, 311, 360, 0, 387, 125, 377, 113, 278, 188, 412, 185, 211, 427, 413, 19, 392, 32, 245, 227, 434, 373, 28, 285, 217, 222, 126, 468, 114, 70, 388, 425, 242, 241, 199, 420, 253, 78, 455, 1, 425, 107, 30, 425, 446, 116, 437, 236, 30, 36, 31, 308, 436, 240, 146, 399, 419, 435, 330, 333, 27, 12, 201, 236, 138, 348, 306, 172, 190, 189, 278, 381, 433, 51, 319, 153, 496, 482, 157, 111, 263, 413, 206, 39, 212, 255, 478, 293, 70, 122, 155, 65, 272, 113, 176, 125, 329, 448, 67, 459, 285, 305, 479, 346, 49, 57, 149, 179, 28, 352, 392, 49, 362, 398, 150, 118, 397, 228, 199, 114, 141, 6, 229, 421, 111, 219, 495, 70, 263, 92, 280, 22, 95, 265, 369, 272, 200, 442, 288, 269, 110, 190, 328, 112, 0, 261, 173, 420, 214, 272, 85, 224, 425, 157, 126, 333, 379, 402, 178, 311, 352, 82, 300, 67, 154, 256, 244, 320, 355, 203, 260, 179, 417, 361, 241, 260, 283, 262, 353, 220, 186, 399, 479, 220, 208, 373, 471, 331, 144, 293, 210, 215, 207, 209, 228, 404, 480, 426, 162, 93, 1, 462, 441, 402, 310, 474, 199, 435, 269, 377, 429, 440, 184, 92, 421, 376, 416, 297, 231, 456, 498, 172, 168, 12, 339, 387, 481, 386, 71, 163, 110, 11, 183, 472, 65, 481, 353, 270, 54, 67, 344, 325, 474, 428, 275, 466, 344, 311, 212, 18, 262, 441, 72, 42, 352, 398, 293, 441, 45, 407, 487, 438, 313, 324, 34, 443, 199, 16, 437, 383, 313, 462, 477, 209, 332, 94, 375, 278, 177, 106, 450, 396, 420, 335, 432, 311, 110, 173, 331, 387, 93, 165, 122, 464, 462, 89, 26, 91, 92, 232, 53, 179, 147, 193, 211, 29, 314, 34, 409, 229, 298, 53, 306, 238, 487, 419, 425, 479, 469, 215, 110, 26, 267, 66, 331, 46, 381, 119, 79, 393, 215, 447, 180, 311, 133, 426, 323, 491, 158, 135, 331, 254, 19, 471, 159, 64, 420, 168, 362, 225, 446, 140, 4, 197, 164, 112, 348, 339, 460, 185, 92, 26, 116, 201, 257, 445, 63, 138, 142, 474, 194, 468, 227, 318, 105, 198, 417, 323, 139, 270, 371, 313, 326, 58, 86, 182, 218, 11, 350, 150, 374, 370, 343, 480, 146, 132, 389, 46, 325, 224, 212, 99, 72, 89, 348, 318, 229, 264, 202, 252, 389, 431, 168, 478, 459, 124, 277, 339, 128, 248, 295, 166, 1, 468, 361, 132, 220, 132, 131, 308, 95, 407, 213, 91, 190, 190, 124, 135, 458, 496, 430, 184, 381, 331, 17, 252, 355, 45, 126, 39, 209, 489, 180, 45, 242, 454, 58, 160, 230, 240, 23, 80, 311, 81, 170, 201, 158, 115, 348, 266, 381, 361, 246, 197, 163, 285, 398, 353, 304, 54, 80, 1, 23, 78, 166, 315, 430, 375, 174, 213, 446, 500, 385, 234, 14, 193, 77, 21, 417, 236, 452, 467, 39, 308, 239, 152, 485, 156, 451, 416, 450, 69, 381, 369, 243, 171, 10, 368, 370, 475, 461, 470, 127, 421, 287, 80, 484, 17, 457, 1, 100, 29, 294, 458, 453, 376, 85, 336, 274, 385, 320, 50, 442, 135, 462, 462, 398, 359, 351, 36, 346, 431, 421, 493, 203, 327, 27, 17, 168, 247, 35, 219, 41, 312, 141, 368, 66, 257, 1, 219, 326, 84, 216, 404, 45, 470, 462, 207, 380, 190, 224, 89, 307, 137, 11, 140, 49, 61, 99, 400, 295, 157, 135, 47, 405, 124, 424, 500, 155, 294, 456, 200, 140, 400, 366, 335, 123, 384, 122, 97, 214, 264, 367, 467, 219, 330, 168, 302, 29, 429, 89, 169, 315, 50, 91, 310, 401, 248, 183, 109, 474, 389, 324, 464, 463, 367, 319, 133, 92, 435, 50, 355, 325, 76, 121, 346, 56, 326, 80, 348, 266, 344, 206, 247, 96, 416, 214, 313, 371, 235, 98, 375, 297, 75, 11, 40, 28, 123, 304, 438, 259, 481, 330, 364, 473, 157, 262, 322, 359, 250, 5, 423, 417, 488, 303, 358, 106, 403, 199, 78, 492, 142, 468, 404, 149, 287, 145, 158, 314, 111, 235, 97, 198, 398, 488, 199, 110, 309, 47, 279, 65, 228, 263, 77, 356, 175, 230, 310, 394, 71, 209, 29, 118, 15, 184, 353, 354, 340, 52, 55, 120, 165, 261, 448, 8, 297, 187, 341, 352, 225, 116, 101, 20, 384, 247, 222, 400, 179, 252, 97, 225, 398, 201, 464, 478, 354, 401, 464, 315, 401, 347, 148, 346, 446, 18, 236, 129, 287, 340, 426, 304, 46, 202, 104, 303, 274, 264, 227, 400, 259, 363, 470, 325, 54, 430, 348, 231, 295, 100, 294, 443, 491, 404, 113, 107, 227, 210, 325, 453, 73, 282, 345, 442, 196, 404, 155, 248, 88, 32, 50, 176, 147, 32, 253, 117, 459, 223, 256, 86, 408, 381, 166, 194, 477, 131, 90, 416, 73, 325, 80, 437, 214, 58, 89, 215, 197, 398, 210, 284, 232, 276, 119])
#a.print_reveal_nested(end='\n')

#start_timer(71)
#b, b_order = radix_sort_both(a, a)
#stop_timer(71)
#b.print_reveal_nested(end='\n')
#b_order.print_reveal_nested(end='\n')

#start_timer(72)
#b, b_order = multi_sort(a, a)
#stop_timer(72)
#b.print_reveal_nested(end='\n')
#b_order.print_reveal_nested(end='\n')

#start_timer(73)
#b, b_order = normal_sort(a, a)
#stop_timer(73)
#b.print_reveal_nested(end='\n')
#b_order.print_reveal_nested(end='\n')

#start_timer(74)
#sort_belong(a, a)
#stop_timer(74)

#print_ln('-------------------------------------------------------------------')




